# -*- coding: utf-8 -*-
"""AI_W4_24_02_2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JPCOPyEyr15cXr8bf-pJZTRxlaPE93Bx
"""

pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
x = np.arange(30,81,1)
slow = fuzz.trapmf(x,[30,30,35,50])
medium = fuzz.trapmf(x,[30,40,50,70])
fast = fuzz.trapmf(x,[50,60,70,80])
plt.figure()
plt.plot(x,slow,'x',linewidth=1.5)
plt.plot(x,medium,'o',linewidth=1.5,label='Medium')
plt.plot(x,fast,'v',linewidth=1.5,label='Fast')

import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
x = np.arange(30,81,1)
slow = fuzz.trimf(x,[30,30,50])
medium = fuzz.trimf(x,[30,50,70])
medium_fast = fuzz.trimf(x,[50,65,80])
full_speed = fuzz.trimf(x,[60,80,80])
plt.figure()
plt.plot(x,slow,'#8c564b',linewidth = 1.5, label = 'slow' )
plt.plot(x,medium,'b',linewidth = 1.5, label = 'medium' )
plt.plot(x,medium_fast,'g',linewidth = 1.5, label = 'medium_fast' )
plt.plot(x,full_speed,'y',linewidth = 1.5, label = 'full_speed' )

import numpy as np 
import skfuzzy as fuzz
import matplotlib.pyplot as plt
from skfuzzy import control as ctrl 
x = np.arange(30,81,1)
slow3 = fuzz.gaussmf(x,30,5)
medium3 = fuzz.gaussmf(x,50,5)
medium_fast3 = fuzz.gaussmf(x,65,5)
full_speed3 = fuzz.gaussmf(x,80,5)
plt.figure()
plt.plot(x,slow3,'#8c564b',linewidth = 1.5, label = 'slow3' )
plt.plot(x,medium3,'b',linewidth = 1.5, label = 'medium3' )
plt.plot(x,medium_fast3,'g',linewidth = 1.5, label = 'medium_fast3' )
plt.plot(x,full_speed3,'y',linewidth = 1.5, label = 'full_speed3' )

# tiền tip
import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
from skfuzzy import control as ctrl
food=ctrl.Antecedent(np.arange(0,11,1),'Food')
service=ctrl.Antecedent(np.arange(0,11,1),'Service')
tip=ctrl.Consequent(np.arange(0,11,1),'Tip')

food['poor']=fuzz.trimf(food.universe,[0,0,5])
food['average']=fuzz.trimf(food.universe,[0,5,10])
food['good']=fuzz.trimf(food.universe,[5,10,10])

service['poor']=fuzz.trimf(service.universe,[0,0,5])
service['average']=fuzz.trimf(service.universe,[0,5,10])
service['good']=fuzz.trimf(service.universe,[5,10,10])

tip['less']=fuzz.trimf(tip.universe,[0,0,5])
tip['normal']=fuzz.trimf(tip.universe,[0,5,10])
tip['much']=fuzz.trimf(tip.universe,[5,10,10])

rule1=ctrl.Rule(food['poor']&service['poor'],tip['less'])
rule2=ctrl.Rule(food['poor']&service['average'], tip['less'])
rule3=ctrl.Rule(food['poor']&service['good'],tip['normal'])
rule4=ctrl.Rule(food['average']&service['poor'],tip['less'])
rule5=ctrl.Rule(food['average']&service['average'],tip['normal'])
rule6=ctrl.Rule(food['average']&service['good'],tip['much'])
rule7=ctrl.Rule(food['good']&service['poor'],tip['less'])
rule8=ctrl.Rule(food['good']&service['average'],tip['normal'])
rule9=ctrl.Rule(food['good']&service['good'],tip['much'])

tipping_ctrl=ctrl.ControlSystem([rule1,rule2,rule3,rule4,rule5,rule6,rule7,rule8,rule9])
tipping=ctrl.ControlSystemSimulation(tipping_ctrl)
tipping.input['Food']=9.0
tipping.input['Service']=5.0
tipping.compute()
print(tipping.output['Tip'])
tip.view(sim=tipping)

food.view()
food['poor'].view()
service.view()
tip.view()



#nồi cơm điện
import numpy as np
import skfuzzy as fuzz
import matplotlib.pyplot as plt
from skfuzzy import control as ctrl
time=ctrl.Antecedent(np.arange(0,11,1),'Time')
rice=ctrl.Antecedent(np.arange(0,11,1),'Rice')
power=ctrl.Consequent(np.arange(0,11,1),'Power')

time['veryfast']=fuzz.trimf(time.universe,[0,0,5])
time['fast']=fuzz.trimf(time.universe,[0,5,10])
time['balance']=fuzz.trimf(time.universe,[5,10,10])
time['slow']=fuzz.trimf(time.universe,[5,10,10])
time['veryslow']=fuzz.trimf(time.universe,[5,10,10])

rice['verymuch']=fuzz.trimf(rice.universe,[0,0,5])
rice['much']=fuzz.trimf(rice.universe,[0,5,10])
rice['normal']=fuzz.trimf(rice.universe,[5,10,10])
rice['less']=fuzz.trimf(rice.universe,[5,10,10])
rice['veryless']=fuzz.trimf(rice.universe,[5,10,10])

power['veryfast']=fuzz.trimf(power.universe,[0,0,5])
power['fast']=fuzz.trimf(power.universe,[0,5,10])
power['balance']=fuzz.trimf(power.universe,[5,10,10])
power['less']=fuzz.trimf(power.universe,[5,10,10])
power['veryless']=fuzz.trimf(power.universe,[5,10,10])

rule1=ctrl.Rule(time['veryfast']&rice['verymuch'],power['veryless'])
rule2=ctrl.Rule(time['veryfast']&rice['much'],power['less'])
rule3=ctrl.Rule(time['veryfast']&rice['normal'],power['balance'])
rule4=ctrl.Rule(time['veryfast']&rice['less'],power['fast'])
rule5=ctrl.Rule(time['veryfast']&rice['veryless'],power['veryfast'])

rule6=ctrl.Rule(time['fast']&rice['verymuch'],power['veryless'])
rule7=ctrl.Rule(time['fast']&rice['much'],power['less'])
rule8=ctrl.Rule(time['fast']&rice['normal'],power['balance'])
rule9=ctrl.Rule(time['fast']&rice['less'],power['fast'])
rule10=ctrl.Rule(time['fast']&rice['veryless'],power['veryfast'])

rule11=ctrl.Rule(time['balance']&rice['verymuch'],power['veryless'])
rule12=ctrl.Rule(time['balance']&rice['much'],power['less'])
rule13=ctrl.Rule(time['balance']&rice['normal'],power['balance'])
rule14=ctrl.Rule(time['balance']&rice['less'],power['fast'])
rule15=ctrl.Rule(time['balance']&rice['veryless'],power['veryfast'])

rule16=ctrl.Rule(time['slow']&rice['verymuch'],power['veryless'])
rule17=ctrl.Rule(time['slow']&rice['much'],power['veryless'])
rule18=ctrl.Rule(time['slow']&rice['normal'],power['less'])
rule19=ctrl.Rule(time['slow']&rice['less'],power['balance'])
rule20=ctrl.Rule(time['slow']&rice['veryless'],power['veryfast'])

rule21=ctrl.Rule(time['veryslow']&rice['verymuch'],power['veryfast'])
rule22=ctrl.Rule(time['veryslow']&rice['much'],power['veryfast'])
rule23=ctrl.Rule(time['veryslow']&rice['normal'],power['fast'])
rule24=ctrl.Rule(time['veryslow']&rice['less'],power['less'])
rule25=ctrl.Rule(time['veryslow']&rice['veryless'],power['less'])

powering_ctrl=ctrl.ControlSystem([rule1,rule2,rule3,rule4,rule5,rule6,rule7,rule8,rule9,rule10,rule11,rule12,rule13,rule14,rule15,rule16,rule17,rule18,rule19,rule20,rule21,rule22,rule23,rule24,rule25])
powering=ctrl.ControlSystemSimulation(powering_ctrl)
powering.input['Time']=150
powering.input['Rice']=1400
powering.compute()
print(powering.output['Power'])
power.view(sim=powering)